package ch.fhnw.oceandive.service;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import org.springframework.stereotype.Service;

/**
 * Service for generating unique IDs based on entity names and user types.
 * Ensures thread-safe ID generation using a concurrent map and atomic counters.
 */
@Service
public class IdGeneratorService {

  private final Map<String, AtomicLong> idCounters =
      new ConcurrentHashMap<>();
/**
 This method generates a unique ID for a given entity name and user type.
  It uses a prefix based on the user type and an atomic counter to ensure uniqueness.
 The ID is generated by concatenating the prefix and the incremented counter-value.
  */
  public int generateId(String entityName, String userType) {
    if (entityName == null || entityName.isBlank() || userType == null) {
      throw new IllegalArgumentException("Entity name and user type must not be null or empty");
    }

    final String prefix = getPrefixForUserType(userType.toUpperCase());
    final AtomicLong counter = idCounters.computeIfAbsent(entityName,
        str -> new AtomicLong(0));
    final int id = Math.toIntExact(counter.incrementAndGet());

    return Integer.parseInt(prefix + id);
  }

  /**
   * Retrieves the prefix corresponding to the specified user type.
   * The prefix is used to distinguish IDs generated for different user types.
   *
   * @param userType the type of the user for which the prefix is to be retrieved.
   *                 Supported user types are "ADMIN", "USER_ACCOUNT", and "GUEST".
   *                 For unsupported or null/empty values, a default prefix is used.
   * @return the prefix string associated with the given user type. If the user type
   *         is not recognized, a default prefix "U-" is returned.
   */
  private String getPrefixForUserType(String userType) {
    return switch (userType) {
      case "ADMIN" -> "A-";
      case "USER_ACCOUNT" -> "U-";
      case "GUEST" -> "G-";
      default -> "U-"; // Default prefix
    };
  }
}
